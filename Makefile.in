# Makefile.in --- main Makefile for BBDB
#
# Copyright (C) 2011-2012 Roland Winkler <winkler@gnu.org>
# 
# This file is part of the Insidious Big Brother Database (aka BBDB),
# 
# BBDB is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# BBDB is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with BBDB.  If not, see <http://www.gnu.org/licenses/>.

### Commentary:

# make all	to compile and build BBDB.
# make install	to install it.
# make TAGS	to update tags tables.
#
# make clean
#      Delete all files from the current directory that are normally
#      created by building the program.	 Don't delete the files that
#      record the configuration.  Also preserve files that could be made
#      by building, but normally aren't because the distribution comes
#      with them.
#
# make distclean
#      Delete all files from the current directory that are created by
#      configuring or building the program.  If you have unpacked the
#      source and built the program without creating any other files,
#      `make distclean' should leave only the files that were in the
#      distribution.
#
# make maintainer-clean
#      Delete everything from the current directory that can be
#      reconstructed with this Makefile.  This typically includes
#      everything deleted by distclean, plus more: .elc files,
#      C source files produced by Bison, tags tables, info files,
#      and so on.
#
# make extraclean
#      Still more severe - delete backup and autosave files, too.

@SET_MAKE@

srcdir = @srcdir@

TAR = @TAR@
COMPRESS = @COMPRESS@
RM   = @RM@
LN_S = @LN_S@

ETAGS = @ETAGS@

SUBDIR = lisp doc tex

SUBDIR_MAKEFILES= lisp/Makefile doc/Makefile tex/Makefile

TARFILES = COPYING ChangeLog INSTALL README              \
           configure configure.ac install-sh Makefile.in \
           lisp/*el tex/*tex doc/*texi               \
           lisp/Makefile.in tex/Makefile.in doc/Makefile.in

all: Makefile info bbdb @BBDB_VM@

Makefile: configure Makefile.in
	@echo "Makefile.in or configure has changed.  Rerun configure!"
	exit 1

configure: configure.ac
	@echo "configure.ac has changed.  Rerun autoconf!"
	exit 1

bbdb:
	cd lisp; $(MAKE) bbdb

vm:
	cd lisp; $(MAKE) vm

info:
	cd doc; $(MAKE) info

autoloads:
	cd lisp; $(MAKE) autoloads

.PHONY: install install-elc install-el install-info install-tex uninstall

install: install-elc install-info install-tex

install-elc:
	@(cd lisp && $(MAKE) install-elc)

install-el:
	@(cd lisp && $(MAKE) install-el)

install-info:
	@(cd doc && $(MAKE) install-info)

install-tex:
	@(cd tex && $(MAKE) install-tex)

uninstall:
	for i in ${SUBDIR}; do (cd $$i; $(MAKE) uninstall); done

# ==================== Cleaning up and miscellanea ====================

.PHONY: clean distclean maintainer-clean extraclean

clean:
	@for i in $(SUBDIR); do (cd $$i && $(MAKE) clean); done

top_distclean=\
	$(RM) config.cache config.log config.status; \
	$(RM) Makefile ${SUBDIR_MAKEFILES}
top_maintainer_clean=\
	${top_distclean}; \
	rm -fr autom4te.cache;

distclean:
	@for i in $(SUBDIR); do (cd $$i && $(MAKE) distclean); done
	${top_distclean}

maintainer-clean:
	@for i in $(SUBDIR); do (cd $$i && $(MAKE) maintainer-clean); done
	${top_maintainer_clean}

extraclean:
	for i in ${SUBDIR}; do (cd $$i; $(MAKE) extraclean); done
	${top_maintainer_clean}
	-$(RM) -f *~ \#*
	-$(RM) *.tar *.tar.gz

.PHONY: tar dist

# tarball
tar: $(TARFILES)
	@if test "x$(TAR)" = "x" ; then                                    \
          echo "Sorry, no \`tar' program available." ;                     \
        else                                                               \
          name=`sed -n 's/^(defconst bbdb-version "\([^"]*\)".*)/bbdb-\1/p' lisp/bbdb.el` ; \
          $(RM) $${name} ; @LN_S@ . $${name} ;                             \
          if test "x$(COMPRESS)" = "x" ; then                              \
            echo "Sorry, no compression program available." ;              \
            echo "The tarball will not be compressed." ;                   \
            echo "creating tar file $${name}.tar..." ;                     \
            $(TAR) --exclude-vcs --exclude=testing  --exclude=".*"         \
            -vchf $${name}.tar                                             \
            `echo $(TARFILES) | sed "s|^|$${name}/|g; s| | $${name}/|g"` ; \
          else                                                             \
            echo "creating tar file $${name}.tar.gz..." ;                  \
            $(TAR) --exclude-vcs  --exclude=".*" -vchf - `echo $(TARFILES) \
            | sed "s|^|$${name}/|g; s| | $${name}/|g"`                     \
            | $(COMPRESS) > $${name}.tar.gz ;                              \
          fi ;                                                             \
          $(RM) $${name} ;                                                 \
        fi

dist: info autoloads tar

TAGS tags:
	@if test "x$(ETAGS)" = "x" ; then                 \
           echo "Sorry, no \`etags' program available." ; \
         else                                             \
           $(ETAGS) lisp/*.el doc/bbdb.texi ;            \
         fi
